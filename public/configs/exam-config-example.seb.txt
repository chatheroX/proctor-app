
This is an EXAMPLE instruction file for creating your actual exam-config.seb file
using the Safe Exam Browser (SEB) Configuration Tool.

--------------------------------------------------------------------------------
IMPORTANT:
- Replace 'YOUR_APP_DOMAIN' below with your actual deployed application domain
  (e.g., https://proctorx.netlify.app or http://localhost:9002 for local dev).
- The ZenTest application dynamically generates the full URL to this .seb file
  AND appends necessary parameters (like #entryToken=...) to that URL when
  launching SEB.
- SEB is expected to download this config file, parse it, and then navigate to
  the Start URL specified BELOW, appending the hash parameters from the initial
  config URL.
--------------------------------------------------------------------------------

Key Settings to Configure in SEB Configuration Tool:

1. General:
   - Start URL: https://YOUR_APP_DOMAIN/seb/entry
     *** THIS IS CRITICAL. It must be exactly this path. ***
     *** DO NOT add any query parameters or hash here. The app adds the token. ***
   - Quit/Restart Password: Set a strong password if desired.
   - Allow user to quit SEB: Check this and set a quit password for emergencies.
     Alternatively, if your app's seb://quit link works, this can be disabled.

2. Config File:
   - Use SEB settings file for: Starting an exam.
   - Applying settings: Choose "Use local settings" or "Use settings from SEB file"
     as appropriate. "Use settings from SEB file" is generally more secure.

3. Browser:
   - Browser Exam Key (BEK): Generate and copy this if your exam platform requires it
     (ZenTest currently does not validate BEK in its client-side checks, but it's good practice).
   - Enable JavaScript.
   - Enable localStorage/sessionStorage if your app uses them for exam state.
   - Block pop-up windows unless your exam legitimately uses them.
   - Enable "Block content (JavaScript, Plugins)" for specific elements if needed,
     but ensure your application's core functionalities are not blocked.

4. Network:
   - Filters:
     - General: Start with "Permit all network traffic" for simplicity.
     - For higher security, you'd configure specific URL filters to only allow
       access to YOUR_APP_DOMAIN and any necessary CDNs or API endpoints.
       Example allowed expression: ^https?://YOUR_APP_DOMAIN/.*

5. Applications:
   - Prohibited Processes: Add common screen sharing, communication, and cheating tools.
     (e.g., Discord, TeamViewer, OBS, SnippingTool, etc.)
   - Permitted Processes: Usually none needed unless your exam specifically
     integrates with another allowed application.

6. Security:
   - Enable "Allow screen sharing/recording detection" if your SEB version supports it.
   - Enable "Allow virtual machine detection".
   - Enable "Allow developer mode detection".

7. User Interface:
   - Show SEB taskbar: Optional, can be useful for reload/quit buttons.
   - Enable reload button: Useful.
   - Enable quit button: Link to `seb://quit`.

8. Down/Uploads:
   - Block file downloads unless explicitly needed.
   - Configure upload settings if your exam involves file uploads.

9. Browser Security:
   - Block "Developer Tools".
   - Block "Find".
   - Block "Plug-ins".
   - Block "View Source".
   - Block "Printing".
   - Block "Downloads".

10. Keyboard Shortcuts:
    - Disable specific shortcuts (Ctrl+C, Ctrl+V, PrintScreen, Alt+Tab, Win Key, etc.).
    - SEB provides extensive options here. Prioritize blocking anything that allows
      leaving the exam or accessing external resources/tools.

After configuring, save this as `exam-config.seb` in your project's
`public/configs/` directory.

The ZenTest application, when launching SEB, will use a URL like:
`sebs://YOUR_DEPLOYED_APP_DOMAIN/configs/exam-config.seb#entryToken=GENERATED_SECURE_TOKEN`

SEB should then:
1. Download `exam-config.seb`.
2. Apply its settings.
3. Navigate its internal browser to the `Start URL` (which is `https://YOUR_APP_DOMAIN/seb/entry`)
   AND append the hash from the original configUrl.
   So, the browser inside SEB should land on:
   `https://YOUR_APP_DOMAIN/seb/entry#entryToken=GENERATED_SECURE_TOKEN`

The `/seb/entry` page in your ZenTest app will then read this token from `window.location.hash`.
