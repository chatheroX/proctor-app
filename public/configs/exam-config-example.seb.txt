
This file provides instructions on how to configure your 'exam-config.seb' file using the Safe Exam Browser (SEB) Configuration Tool.
You need to create an actual 'exam-config.seb' file and place it in the '/public/configs/' directory of your project.

Key SEB Configuration Settings:
---------------------------------

1.  **General Tab**:
    *   **Start URL**:
        *   Set this to the **absolute URL** of your application's `/seb/exam-view` page.
        *   Example: If your deployed application is at `https://proctorx.netlify.app`, the Start URL should be:
          `https://proctorx.netlify.app/seb/exam-view`
        *   **VERY IMPORTANT**: Replace `https://proctorx.netlify.app` (or any example domain) with YOUR **actual deployed application domain name**. This URL is fixed inside the .seb file once you save it.
        *   This Start URL itself should NOT contain hash parameters like `#examId=...` or `?examId=...`. Those parameters are dynamically added to the *URL of the .seb file itself* when SEB is launched from your application (see `join-exam/page.tsx`), and your `/seb/exam-view` page is designed to read them from `window.location.hash`.
    *   **Quit Link**:
        *   Enable "Show quit button in SEB task bar".
        *   Set Quit Link URL to: `seb://quit`

2.  **Config File Tab**:
    *   **Use SEB Settings File**: Choose "Starting an exam".
    *   **Apply settings**: Choose "Use local client config" or "Use settings from SEB file" as appropriate for your testing/deployment. For exams, "Use settings from SEB file" is typical.

3.  **Browser Tab**:
    *   **Enable Browser Exam Key**: Check this. It helps ensure the exam is taken with the correct configuration. The key will be generated by SEB.
    *   **Enable Config Key**: Check this. It helps ensure the exam is taken with the correct configuration. The key will be generated by SEB.
    *   **User Agent**: Choose "Default" or "iPad" if you need specific rendering. "Desktop Mode" is usually fine.

4.  **Network Tab -> URL Filter**:
    *   **Enable URL filtering**: Check this.
    *   **Action for prohibited resource**: Choose "Block resource" or "Show message".
    *   **Allowed Expressions / Rules**:
        *   You MUST allow your application's domain: `https://YOUR_APP_DOMAIN/*` (e.g., `https://proctorx.netlify.app/*`)
        *   Allow Supabase URLs if your app directly communicates with Supabase from the client for things other than the initial data load handled by server components or API routes (often not needed if using Next.js API routes as a proxy).
            *   `https://*.supabase.co/*`
            *   `wss://*.supabase.co/*`
        *   Allow any CDNs you use for fonts, images, etc. (e.g., `https://api.dicebear.com/*`, `https://images.unsplash.com/*`, `https://fonts.gstatic.com/*`).
        *   Block everything else by default: Add a rule at the end: `*` with Action "Block".

5.  **Applications Tab -> Prohibited Processes**:
    *   Add common screen sharing, communication, and remote desktop applications if desired.

6.  **Exam Tab**:
    *   **Allow Reload in exam**: Uncheck (to prevent accidental refresh during exam).
    *   **Allow Page Back/Forward in exam**: Check/Uncheck based on whether your exam `allow_backtracking` is true. Generally, SEB's back/forward can be disabled, and your app's internal "Previous"/"Next" buttons control navigation.

7.  **User Interface Tab**:
    *   Configure taskbar visibility, audio controls, time display, keyboard layout visibility as needed.
    *   **Enable Browser Window Toolbar**: Optional.
    *   **Enable Reload Button**: Uncheck (as per point 6).

8.  **Security Tab**:
    *   **Enable creating new desktop**: Recommended for highest security.
    *   **Allow screen sharing/recording**: Uncheck.
    *   **Allow virtual machine**: Uncheck.
    *   **Allow developer tools**: Uncheck.
    *   **Allow Right Mouse Button**: Uncheck (your app will handle context menu blocking via JS too).
    *   **Allow Copy/Paste**: Uncheck.
    *   **Keyboard Shortcuts**:
        *   Enable "Block specific shortcut keys".
        *   Block common shortcuts: Ctrl+C, Ctrl+V, Ctrl+X, Ctrl+A, Ctrl+P, Ctrl+S, Ctrl+F, Ctrl+R, Ctrl+T, Ctrl+W, Alt+Tab, Esc, F1-F12, PrintScreen, Windows Key, etc.
        *   **Allowed Keys for Exam**: Your application logic (`ExamTakingInterface`) currently handles MCQ selection primarily via mouse. SEB key filtering provides an additional layer. Your prompt specified allowing A-Z, arrow keys, and mouse clicks. This should be configured in SEB if you intend to allow text input for any reason, otherwise, stricter blocking can be applied.

9.  **Save the Configuration**:
    *   Save the file as `exam-config.seb` inside your project's `public/configs/` directory.
    *   If you make changes, you need to re-save and potentially re-deploy this `.seb` file.

**JavaScript Code (`join-exam/page.tsx`) Dynamically Uses Current Domain:**
Your JavaScript code in `join-exam/page.tsx` *already* dynamically determines the domain where the app is running using `window.location.origin`. This ensures the link generated to launch SEB points to the `.seb` file on the *current* domain:
Example: `const configUrlWithParams = \`\${window.location.origin}\${SEB_CONFIG_FILE_RELATIVE_PATH}#examId=...\`;`
This part is correctly dynamic.

The only static part is the `startURL` within the `.seb` file you create, which needs to be the absolute URL of your deployed application's `/seb/exam-view` page.
