
This is an EXAMPLE instruction file for creating your 'exam-config.seb'.
You MUST use the Safe Exam Browser (SEB) Configuration Tool to create the actual 'exam-config.seb' file.

CRITICAL INSTRUCTIONS FOR YOUR 'exam-config.seb' FILE:

1.  **PLACEMENT**:
    *   After creating 'exam-config.seb' with the SEB Configuration Tool, you MUST place this file in your Next.js project at the following exact path:
        `public/configs/exam-config.seb`
    *   Ensure this file is committed to your repository and deployed with your application.

2.  **START URL (Inside your 'exam-config.seb' settings)**:
    *   In the SEB Configuration Tool, go to the "General" tab.
    *   Set the "Start URL" to: `https://YOUR_APP_DOMAIN/seb/entry`
    *   **IMPORTANT**:
        *   Replace `YOUR_APP_DOMAIN` with the actual, publicly accessible domain where your ZenTest application is deployed (e.g., `https://proctorx.netlify.app`).
        *   The Start URL should point to `/seb/entry` WITHOUT any hash parameters or query strings initially. Your application will dynamically add the necessary `#entryToken=...` to the URL of the `.seb` file itself when launching SEB. SEB will then append this hash to the Start URL.

3.  **SECURITY SETTINGS (Inside your 'exam-config.seb' settings)**:
    *   **Browser Exam Key (BEK)**: Generate and use a strong Browser Exam Key. Your application's `/seb/entry` page might perform a conceptual check for this via headers if SEB is configured to send it (advanced setup).
    *   **Config Key (CK)**: Generate and use a strong Config Key.
    *   **Prohibited Processes**: Add common screen sharing, communication, and virtual machine processes to the prohibited list.
    *   **Allowed Processes**: Typically, only SEB itself.
    *   **Keyboard Shortcuts**: Disable Ctrl, Alt, Cmd/Win, Function keys (F1-F12), PrintScreen, Esc (unless quit link is used), Tab (unless specifically needed for accessibility within a form element if SEB allows).
    *   **Clipboard**: Disable.
    *   **Developer Tools**: Disable browser developer tools.
    *   **URL Filtering**:
        *   For a token-based approach, extensive URL filtering might be less critical for the initial page load, as the token validates the session.
        *   However, you might want to restrict navigation away from your application's domain.
        *   Allow your application's domain: `https://YOUR_APP_DOMAIN/` (and subpaths).
        *   Allow Supabase URLs if your app directly communicates for auth status or other client-side fetches (though API routes are better).
    *   **Quit Link**:
        *   Enable "Allow user to quit SEB".
        *   Set the quit link URL to `seb://quit`.
        *   Optionally, set a quit password.
    *   **Audio Control**: Enable if needed, disable if not.
    *   **File Downloads/Uploads**: Configure based on whether your exam requires them (current ZenTest doesn't have uploads). For security, generally disable downloads unless explicitly needed.
    *   **Browser Window**: Configure to open full screen, hide SEB taskbar initially.
    *   **Network**: Configure proxies if necessary for your institution.

4.  **SERVING THE .SEB FILE**:
    *   Ensure your hosting provider (e.g., Netlify) serves the `/configs/exam-config.seb` file with the correct `Content-Type` (e.g., `application/x-seb` or `application/octet-stream`) and does not treat it as an HTML page or redirect it. The `_headers` and `_redirects` files in the `public` directory aim to assist with this on Netlify.

Your ZenTest application (`join-exam/page.tsx`) will construct a URL like:
`sebs://YOUR_APP_DOMAIN/configs/exam-config.seb#entryToken=GENERATED_TOKEN`
to launch SEB.

SEB will then:
1. Fetch `https://YOUR_APP_DOMAIN/configs/exam-config.seb`.
2. Apply its settings.
3. Navigate to the "Start URL" configured inside it (i.e., `https://YOUR_APP_DOMAIN/seb/entry`), appending the hash: `https://YOUR_APP_DOMAIN/seb/entry#entryToken=GENERATED_TOKEN`.
4. Your `/seb/entry` page (`SebEntryClient.tsx`) will read the token from the hash.

This ensures the process is dynamic regarding your application's domain for launching SEB, but the `Start URL` *within* the `.seb` file must be correctly set to your deployed application's public domain.
